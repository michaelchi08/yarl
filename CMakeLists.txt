CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
PROJECT(yarl)

# COMPILER SETTINGS
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
IF (CMAKE_COMPILER_IS_GNUCXX)
  ADD_DEFINITIONS(-std=c++11)
ENDIF()

# CCACHE
FIND_PROGRAM(CCACHE_FOUND ccache)
IF(CCACHE_FOUND)
  SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
  SET_PROPERTY(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)
ENDIF(CCACHE_FOUND)

# GOLD LINKER
IF(UNIX AND NOT APPLE)
  EXECUTE_PROCESS(COMMAND ${CMAKE_C_COMPILER} -fuse-ld=gold -Wl,--version ERROR_QUIET OUTPUT_VARIABLE ld_version)
  IF ("${ld_version}" MATCHES "GNU gold")
    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fuse-ld=gold -Wl,--disable-new-dtags")
    SET(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -fuse-ld=gold -Wl,--disable-new-dtags")
  ENDIF()
ENDIF()

# DEPENDENCIES
LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
FIND_PACKAGE(Ceres REQUIRED)
FIND_PACKAGE(Eigen3 REQUIRED)
FIND_PACKAGE(LibXml2 REQUIRED)
FIND_PACKAGE(OpenCV 3.0 REQUIRED)

# INCLUDES
INCLUDE_DIRECTORIES(include)
INCLUDE_DIRECTORIES(${CERES_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(/usr/include/eigen3)
INCLUDE_DIRECTORIES(/usr/include/libxml2)
INCLUDE_DIRECTORIES(${OpenCV_INCLUDE_DIRS})

# GTEST
ADD_SUBDIRECTORY(deps/googletest)
INCLUDE_DIRECTORIES(${gtest_SOURCE_DIR}/include)

# YARL
LINK_DIRECTORIES(${CMAKE_BINARY_DIR}/lib)
SET(
	YARL_OPENCV_DEPS
	opencv_calib3d
	opencv_core
	opencv_features2d
	opencv_flann
	opencv_highgui
	opencv_imgcodecs
	opencv_imgproc
	opencv_ml
	opencv_objdetect
	opencv_photo
	opencv_shape
	opencv_stitching
	opencv_superres
	opencv_video
	opencv_videoio
	opencv_videostab
)
SET(
  YARL_DEPS
  yarl
  xml2
  ${CERES_LIBRARIES}
	${YARL_OPENCV_DEPS}
  gtest
  glog
  pthread
)
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(tests)
ADD_SUBDIRECTORY(examples)
ADD_SUBDIRECTORY(tools)
